{"version":3,"sources":["components/form.js","components/result.js","components/forecast.js","components/hourlyTemp.js","components/startPage.js","components/App.js","serviceWorker.js","index.js"],"names":["Form","props","onSubmit","submit","type","value","placeholder","onChange","change","Result","weather","err","city","temp","date","sunrise","sunset","pressure","wind","content","sunriseTime","Date","toLocaleTimeString","sunsetTime","className","Forecast","dailyForecast","days","map","day","key","dayDate","dayTemp","dayNight","dayWeather","HourlyChart","shorterHours","hours","hour","simpleLineChartData","parseInt","labels","series","name","data","temps","options","axisX","labelInterpolationFnc","index","axisY","showArea","StartPage","href","APIKey","APIpixa","App","state","backGround","started","forecast","hourlyForecast","hourlyForecastDate","handleInputChange","e","setState","target","handleCitySubmit","preventDefault","API","fetch","then","response","ok","Error","json","time","toLocaleString","sys","main","speed","nightIcon","lon","coord","lat","handle2ndLooking","catch","console","log","API2","i","n","current","description","length","replace","handleBackGround","daily","night","dayIcon","icon","dt","toLocaleDateString","splice","concat","hourly","hits","largeImageURL","style","backgroundImage","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.3bf58f2f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Form = (props) => {\r\n    return (\r\n        <form onSubmit={props.submit}>\r\n            <input type=\"text\" value={props.value} placeholder=\"Type your ciry\" onChange={props.change}/>\r\n            <button>Search</button>\r\n        </form>\r\n    );\r\n}\r\n \r\nexport default Form;","import React from 'react';\r\nimport './Result.css';\r\n\r\nconst Result = (props) => {\r\n    const {err, city, temp, date,sunrise, sunset, pressure, wind, weather} = props.weather\r\n\r\n    let content = null;\r\n\r\n    if(!err && city) {\r\n\r\n        const sunriseTime = new Date(sunrise * 1000).toLocaleTimeString()\r\n        const sunsetTime = new Date(sunset * 1000).toLocaleTimeString()\r\n        content = (\r\n            <div>\r\n            <h3>{city}</h3>\r\n            <p>City Name</p>\r\n            <h4>{temp}Â°C</h4>\r\n            <p>Temperature</p>\r\n            <div className='higher'>\r\n                <div className='lower'>\r\n                    <h4>{date}</h4>\r\n                    <p>Date and hour</p>\r\n                </div>\r\n                <div className='lower'>\r\n                    <h4>{weather}</h4>\r\n                    <p>Weather</p>\r\n                </div>\r\n            </div>\r\n            <div className='higher'>\r\n                <div className='lower'>\r\n                    <h4>{sunriseTime}</h4>\r\n                    <p>Sunrise</p>\r\n                </div>\r\n                <div className='lower'>\r\n                    <h4>{sunsetTime}</h4>\r\n                    <p>Sunset</p>\r\n                </div>\r\n            </div>\r\n            \r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"result\">\r\n          {err ? `Nie mamy w bazie: ${city}` : content}  \r\n        </div>\r\n        </>\r\n    );\r\n}\r\n \r\nexport default Result;","import React, {Componenet} from 'react';\r\n\r\nconst Forecast = (props) => {\r\n\r\n    const dailyForecast = props.days.map(day => (\r\n\r\n        <div className=\"dailyForecast\" key={day.dayDate}>\r\n            <h3>{day.dayDate}</h3>\r\n            <div className=\"higher\">\r\n                <div className=\"lower\">\r\n                    <h4>{day.dayTemp}</h4>\r\n                    <p>Day</p>\r\n                </div>\r\n                <div className=\"lower\">\r\n                    <h4>{day.dayNight}</h4>\r\n                    <p>Night</p>\r\n                </div>\r\n            </div>\r\n            \r\n            <h4> {day.dayWeather}</h4>\r\n            <p>Weather</p>\r\n            {/* <div className=\"icon\" style={{backgroundImage:`url(${day.dayIcon})`}}></div> */}\r\n        </div>\r\n    ))\r\n    return ( \r\n        <div className='forecast'>{dailyForecast}</div>\r\n     );\r\n}\r\n \r\nexport default Forecast;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ChartistGraph from 'react-chartist';\r\nimport Chartist from 'chartist';\r\nimport \"chartist/dist/chartist.css\";\r\n\r\n\r\n\r\nconst HourlyChart = (props) => {\r\n    var hours = [...props.hours]\r\n    let shorterHours = hours.map(hour => hour[0]+hour[1])\r\n    let shorterHoursNumbers = shorterHours.map(hour => parseInt(hour, 10))\r\n    var temps = [...props.temps]\r\n\r\n    // console.log(shorterHoursNumbers)\r\n\r\n    \r\nvar simpleLineChartData = {\r\n  labels: shorterHours,\r\n  series: [{\r\n    name: 'series',\r\n    data: temps,},\r\n  ],\r\n  \r\n}\r\nvar biPolarBarChartOptions = {\r\n  // high: 30,\r\n  // low: -10,\r\n  axisX: {\r\n    labelInterpolationFnc: function(value, index) {\r\n      return index % 3 === 0  ? value +':00' : null;\r\n    }\r\n  },\r\n  axisY:{\r\n    labelInterpolationFnc: function(value) {\r\n      return value + 'Â°C'\r\n    }\r\n  },\r\n  showArea: true,\r\n  \r\n}\r\n\r\n\r\n    return ( \r\n        <div className='chart'>\r\n          <h2>Hourly forecast for 24 hours:</h2>\r\n            <ChartistGraph data={simpleLineChartData} options={biPolarBarChartOptions} type={'Line'} className={'.ct-chart-bar'}/>\r\n\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default HourlyChart;\r\n","import React from 'react';\r\n\r\nconst StartPage = () => {\r\n    return ( \r\n    <div className='startPage'>\r\n        <h1>Weather App</h1>\r\n        <br/>\r\n        <h3>by <a href=\"https://github.com/BartoNatanael\">BartÅomiej Nowak</a></h3>\r\n        <br/>\r\n        <p>Picture API from: <a href=\"https://pixabay.com/\">Pixabay</a>.</p>\r\n    </div> );\r\n}\r\n \r\nexport default StartPage;","import React, {Component} from 'react';\nimport Form from './form';\nimport Result from './result';\nimport Forecast from './forecast';\nimport HourlyChart from './hourlyTemp';\nimport StartPage from './startPage';\n\nimport './App.css';\n\n// Klucz do API\nconst APIKey = '42f820f38e074d0adb73d09de7748a6c'\nconst APIpixa = '15964181-0e2a36068d47ea2f8398b6c56'\n\nclass App extends Component {\n\n  state = {\n    backGround: 'https://cdn.pixabay.com/photo/2013/10/02/23/03/dawn-190055_960_720.jpg',\n    started: false,\n\n    value: \"\",\n    date: '',\n    city: '',\n    sunrise: '',\n    sunset: '',\n    temp: '',\n    pressure: '',\n    wind: '',\n    err: false,\n    weather: '',\n    forecast:[ 1, 2, 3, 4],\n    hourlyForecast: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 ,13, 14, 15, 16, 17,18, 19, 20, 21, 22, 23, 24],\n    hourlyForecastDate: ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12','13', '14', '15', '16', '17','18', '19', '20', '21', '22', '23', '24']\n  }\n  handleInputChange = (e) => {\n    this.setState({\n      value: e.target.value\n    })\n  }\n\n  handleCitySubmit = (e) => {\n    e.preventDefault()\n    const API = `https://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&appid=${APIKey}&units=metric`\n\n\n    fetch(API)\n    .then(response => {\n      if(response.ok){\n        return response\n      }\n      throw Error(\"Nie udaÅo siÄ\")\n    })\n    .then(response => response.json())\n    .then(data => {\n      const time = new Date().toLocaleString()\n      this.setState({\n        date: time,\n        city: this.state.value,\n        sunrise: data.sys.sunrise,\n        sunset: data.sys.sunset,\n        temp: data.main.temp,\n        pressure: data.main.pressure,\n        wind: data.wind.speed,\n        nightIcon: ``,\n        err: false,\n        started: true,\n      })\n      let lon = data.coord.lon\n      let lat = data.coord.lat\n      this.handle2ndLooking(lon, lat)\n      // console.log(lon, lat)\n    })\n    .catch(err => {\n      console.log(err);\n      this.setState({\n        err: true,\n        city: this.state.value\n    })})\n      \n  }\n\n  handle2ndLooking = (lon, lat) =>{\n\n    const API2 = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&appid=${APIKey}&units=metric`\n    console.log(API2)\n    fetch(API2)\n    .then(response => {\n      if(response.ok){\n        return response\n      }\n      throw Error(\"Nie udaÅo siÄ\")\n    })\n    .then(response => response.json())\n    .then(data => {\n      let weather = data.current.weather[0].description\n      if(weather.length > 20){\n        weather = data.current.weather[0].main\n      }\n      this.setState({\n        weather\n      })\n      console.log(weather)\n      weather.replace(/ /g,\"+\")\n      console.log(weather)\n      this.handleBackGround(weather)\n      let i, n\n      for(i = 1; i<5;i++){\n        const dayTemp = data.daily[i].temp.day\n        const dayNight = data.daily[i].temp.night\n        const dayWeather = data.daily[i].weather[0].description\n        const dayIcon = `http://openweathermap.org/img/wn/${data.daily[i].weather[0].icon}.png`\n        const dayDate = new Date(data.daily[i].dt * 1000).toLocaleDateString()\n        const day = {dayTemp, dayNight, dayWeather, dayIcon, dayDate}\n        // console.log(day)\n        this.setState({\n          forecast: this.state.forecast.splice(0,1),\n          forecast: this.state.forecast.concat(day)\n        })\n      }\n      for(n = 0; n<25;n++){\n        const hour = new Date(data.hourly[n].dt * 1000).toLocaleTimeString()\n        const temp = data.hourly[n].temp\n\n        const hourly = {hour: hour, temp: temp}\n        \n        // console.log(hourly)\n        this.setState({\n          hourlyForecast: this.state.hourlyForecast.splice(0,1),\n          hourlyForecast: this.state.hourlyForecast.concat(temp),\n          hourlyForecastDate: this.state.hourlyForecastDate.splice(0,1),\n          hourlyForecastDate: this.state.hourlyForecastDate.concat(hour)\n        })\n      }\n      \n    })\n    .catch(err => {\n      console.log(err);\n      })\n\n  }\n\n  handleBackGround = (weather) =>{\n    const API = `https://pixabay.com/api/?key=${APIpixa}&q=${weather}&image_type=photo`\n    console.log(API)\n    fetch(API)\n    .then(response => {\n      if(response.ok){\n        return response\n      }\n      throw Error(\"Nie udaÅo siÄ\")\n    })\n    .then(response => response.json())\n    .then(data => {\n      this.setState({\n        backGround: data.hits[0].largeImageURL\n      })\n    })\n    .catch(err => {\n      console.log(err);\n      this.setState({\n        err: true,\n        city: this.state.value\n    })})\n  }\n\n  render(){\n  return (\n    <div className=\"App\" style={{backgroundImage:`url(${this.state.backGround})`}}>\n      <nav>\n      <Form \n        value={this.state.value} \n        change={this.handleInputChange}\n        submit={this.handleCitySubmit}\n      />\n      </nav>\n      {this.state.started ? \n      <Result \n      weather={this.state}\n      />: null}\n      \n      {this.state.started ? <HourlyChart\n       hours={this.state.hourlyForecastDate}\n       temps={this.state.hourlyForecast}\n       /> : null}\n      {this.state.started ? <Forecast days={this.state.forecast}/> : null}\n      {this.state.started ? null : <StartPage/>}\n    </div>\n      \n  );}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}